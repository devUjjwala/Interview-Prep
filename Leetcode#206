/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) 
    {
        
        ListNode *prev = NULL;
        ListNode *curr = head;
        ListNode *nextTemp;

        while (curr != NULL) 
        {
            nextTemp = curr -> next;
            curr -> next = prev;
            prev = curr;
            curr = nextTemp;
        }
        return prev;
        
    }
};

// Recursive

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution 
{
public:
    ListNode* reverseList(ListNode* head) 
    {
        if( head == NULL)
            return head;
            
        if( head -> next == NULL);
            return head;
            
        ListNode *p = reverseList(head -> next);
        head -> next -> next = head;
        head -> next = null;
        return p;
    }
 };
