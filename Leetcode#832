class Solution {
public:
    vector<vector<int>> flipAndInvertImage(vector<vector<int>>& A) {
        
        if( A.empty() || A[0].empty())
            return A;
        
        // it is always going to be an nxn matrix
        int n = A.size();
        int temp;

       // cout << "n= " << n << "\n";
        
        // this is the old school solution without using the std library function such as reverse
        for( int i = 0; i < n; i++)
        {
            for( int j = n-1, k = 0; (j >= n/2 && k < j); k++)
            {
                //cout<< "i =  " << i << " k = " << k << " j = " << j;
                //cout << "\n a[i][j] = " << A[i][j] << " a[i][k] = " << A[i][k] << "\n\n";
            
                temp = A[i][k];
                A[i][k] = !A[i][j];
                A[i][j] = !temp;

                //cout << " a[i][j] = " << A[i][j] << " a[i][k] = " << A[i][k] << "\n\n";
                
                j--;
            }
        }
        
        // only if the rows and columns are odd do we need to invert the centre column 
        if( n%2 != 0)
        {
            for( int i = 0, j = n/2; i < n; i++)
            {
                A[i][j] = !A[i][j];
            }
        }
         
        return A;
        
    }
};
